[{"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/index.js":"1","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/reportWebVitals.js":"2","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/App.tsx":"3","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/header/header.tsx":"4","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/Login/login.tsx":"5","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/Dashboard/dashboardcard/dashboardCard.tsx":"6","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/header/dropdown/dropdown.tsx":"7","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/Dashboard/chartcard/chartCard.tsx":"8","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/useDetectOutsideClick.tsx":"9","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/sharedComponents/carousel/carousel.tsx":"10","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/useToken.tsx":"11"},{"size":449,"mtime":1631582823966,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1631582823967,"results":"14","hashOfConfig":"13"},{"size":1542,"mtime":1668411926740,"results":"15","hashOfConfig":"13"},{"size":739,"mtime":1668411643064,"results":"16","hashOfConfig":"13"},{"size":3905,"mtime":1667371548951,"results":"17","hashOfConfig":"13"},{"size":6075,"mtime":1668397938879,"results":"18","hashOfConfig":"13"},{"size":1207,"mtime":1668410691418,"results":"19","hashOfConfig":"13"},{"size":790,"mtime":1657780785706,"results":"20","hashOfConfig":"13"},{"size":704,"mtime":1658705314478,"results":"21","hashOfConfig":"13"},{"size":2077,"mtime":1659429767841,"results":"22","hashOfConfig":"13"},{"size":576,"mtime":1668409291839,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1jw5fsj",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/index.js",[],["51","52"],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/reportWebVitals.js",[],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/App.tsx",["53","54"],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/header/header.tsx",[],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/Login/login.tsx",["55"],"import './login.css';\nimport React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport TextField from '@mui/material/TextField';\nimport PropTypes from 'prop-types';\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n  ></Box>\n);\n\nasync function loginUser(credentials: any) {\n  console.log('Credentials:', credentials);\n  return await fetch('http://localhost:8080/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(credentials),\n  })\n    .then(data => data.json())\n    .catch(error => console.log('ERROR:', error));\n}\n\nexport default function LoginPage({ setToken }: any, customToken?: any) {\n  console.log('CUSTOM', customToken);\n  if (customToken.length > 0) {\n    setToken(customToken);\n  }\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  let token: any = null;\n  let shouldHideNoUserPopover: boolean = false;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    token = await loginUser({\n      EmailAddress: username,\n      PasswordHash: password,\n    });\n\n    if (!token?.UserID) {\n      shouldHideNoUserPopover = true;\n    }\n    setToken(token);\n  };\n\n  const handleClick = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const open = Boolean(anchorEl) && shouldHideNoUserPopover;\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <Card sx={{ minWidth: 400 }} className=\"login-card\">\n      <CardContent className=\"card-content\">\n        <h1>Energy Management Dashboard</h1>\n        <p className=\"card-title\">Enter your email and password below</p>\n        <form onSubmit={handleSubmit}>\n          <label className=\"label-content\">\n            <p className=\"text-field-title\">Email</p>\n            <TextField\n              id=\"outlined-email-input\"\n              type=\"text\"\n              autoComplete=\"current-email\"\n              className=\"text-field\"\n              onChange={(e: any) => setUserName(e.target.value)}\n            />\n          </label>\n          <label className=\"label-content\">\n            <p className=\"text-field-title\">Password</p>\n            <TextField\n              id=\"outlined-password-input\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              className=\"text-field\"\n              onChange={(e: any) => setPassword(e.target.value)}\n            />\n          </label>\n          <div className=\"card-bottom\">\n            <Button\n              className=\"card-submit\"\n              type=\"submit\"\n              variant=\"contained\"\n              onClick={handleClick}\n              aria-describedby={id}\n            >\n              Log In\n            </Button>\n            <Popover\n              id={id}\n              open={open}\n              anchorEl={anchorEl}\n              onClose={handleClose}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n            >\n              <Typography sx={{ p: 2 }}>\n                User email or password does not exist\n              </Typography>\n            </Popover>\n          </div>\n        </form>\n      </CardContent>\n      <CardActions>\n        <p className=\"card-sign-up\">\n          Don't have an account? <span className=\"sign-up-text\">Sign Up!</span>\n        </p>\n      </CardActions>\n    </Card>\n  );\n}\n\nLoginPage.propTypes = {\n  setToken: PropTypes.func.isRequired,\n};\n",["56","57"],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/Dashboard/dashboardcard/dashboardCard.tsx",["58","59","60","61","62","63"],"import React from 'react';\nimport { ChartCard } from '../chartcard/chartCard';\nimport './dashboardCard.css';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/Button';\nimport { useState } from 'react';\nimport { getTextOfJSDocComment } from 'typescript';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Carousel, {\n  CarouselItem,\n} from '../../sharedComponents/carousel/carousel';\n\nexport interface IEnergyData {\n  price: string;\n  savings: string;\n  data: {\n    labels: string[];\n    datasets: [\n      {\n        label: string;\n        fill: boolean;\n        lineTension: number;\n        backgroundColor: string;\n        borderColor: string;\n        borderWidth: number;\n        data: number[];\n      }\n    ];\n  };\n}\n\nexport interface IEnergySavings {\n  id: number;\n  title: string;\n  description: string;\n}\n\nconst energyData: IEnergyData[] = [\n  {\n    price: '$306.20',\n    savings: '1.3%',\n    data: {\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n      ],\n      datasets: [\n        {\n          label: '',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56, 71, 62, 81, 78, 68, 72, 71],\n        },\n      ],\n    },\n  },\n  {\n    price: '$108.10',\n    savings: '1.3%',\n    data: {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n      datasets: [\n        {\n          label: '',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56, 71],\n        },\n      ],\n    },\n  },\n  {\n    price: '$306.20',\n    savings: '1.3%',\n    data: {\n      labels: [\n        'Jan 1',\n        'Jan 15',\n        'Jan 31',\n        'Feb 1',\n        'Feb 28',\n        'Mar 1',\n        'Mar 15',\n        'Mar 30',\n      ],\n      datasets: [\n        {\n          label: '',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [65, 72, 63, 59, 68, 62, 72, 80],\n        },\n      ],\n    },\n  },\n  {\n    price: '$306.20',\n    savings: '1.3%',\n    data: {\n      labels: ['Jan 1', 'Jan 6', 'Jan 12', 'Jan 18', 'Jan 24', 'Jan 31'],\n      datasets: [\n        {\n          label: '',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56, 71, 62],\n        },\n      ],\n    },\n  },\n  {\n    price: '$306.20',\n    savings: '1.3%',\n    data: {\n      labels: ['Mon', 'Tues', 'Wed', 'Th', 'Fri', 'Sat', 'Sun'],\n      datasets: [\n        {\n          label: '',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56, 71, 62],\n        },\n      ],\n    },\n  },\n];\n\nconst energySavingsInformation: IEnergySavings[] = [\n  {\n    id: 0,\n    title: 'reduce energy consumption',\n    description: 'turn off lights between 5-9pm',\n  },\n  {\n    id: 1,\n    title: 'Change laundry time',\n    description: 'Perform laundry past 9pm',\n  },\n  {\n    id: 2,\n    title: 'reduce water consumption',\n    description: 'Turn on sprinklers at night',\n  },\n];\n\ninterface MyProps {}\n\ninterface MyState {\n  index: number;\n}\n\nexport interface carouselData {\n  children: string;\n  width?: any;\n}\n\nconst carouselItem: carouselData[] = [\n  {\n    children: 'item1',\n    width: '100%',\n  },\n  {\n    children: 'item2',\n    width: '100%',\n  },\n  {\n    children: 'item3',\n    width: '100%',\n  },\n];\n\nexport default class DashboardCard extends React.Component<MyProps, MyState> {\n  constructor(props: IEnergyData) {\n    super(props);\n    this.state = {\n      index: 0,\n    };\n\n    this.parentToChild = this.parentToChild.bind(this);\n  }\n\n  parentToChild(index: number) {\n    this.setState({\n      index: index,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Dashboard\">\n        <div className=\"dashboard-header\">\n          <div className=\"button-group\">\n            <ButtonGroup size=\"small\" aria-label=\"small button group\">\n              <Button onClick={() => this.parentToChild(4)}>1W</Button>\n              <Button onClick={() => this.parentToChild(3)}>1M</Button>\n              <Button onClick={() => this.parentToChild(2)}>3M</Button>\n              <Button onClick={() => this.parentToChild(1)}>6M</Button>\n              <Button onClick={() => this.parentToChild(0)}>1Y</Button>\n            </ButtonGroup>\n          </div>\n        </div>\n        <Card className=\"card-dashboard\">\n          <CardContent>\n            <div className=\"content\">\n              <div className=\"chart-card\">\n                <ChartCard\n                  energy={energyData[this.state.index]}\n                  shouldShowChart=\"true\"\n                />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <div className=\"card-list\">\n          <Card className=\"card-lidt-card\">\n            <CardContent>\n              <p>Energy Use: 24kwh</p>\n            </CardContent>\n          </Card>\n\n          <div>\n            <Carousel>\n              <CarouselItem>Item 1</CarouselItem>\n              <CarouselItem>Item 2</CarouselItem>\n              <CarouselItem>Item 3</CarouselItem>\n            </Carousel>\n          </div>\n\n          <Card className=\"card-lidt-card\">\n            <CardContent>\n              <p>Energy Use: 24kwh</p>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction setData(energyData: any) {\n  throw new Error('Function not implemented.');\n}\n","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/header/dropdown/dropdown.tsx",["64","65","66"],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/Dashboard/chartcard/chartCard.tsx",["67","68","69"],"import React from 'react';\nimport './chartCard.css';\nimport {Line} from 'react-chartjs-2';\nimport { ChartOptions } from 'chart.js/auto';\n\nfunction shouldShowChart (props: any) {\n  if (!props.shouldShowChart) {\n    return null;\n  }      \n}\n\ntype lineChart = {\n  energy: any,\n  options: any,\n}\n\nconst options: any = {\n  scales: {\n    x: {\n      grid: {\n        display: false\n      }    },\n    y: {\n      grid: {\n        display: false\n      }    }\n  },\n  plugins: {\n    legend: {\n        display: false\n    },\n  },\n  tooltips:{\n    enabled:false\n  },\n  hover: {mode: null},\n}\n\n\nexport const ChartCard = (props: any) => (\n  <div className='card-container'>\n    <Line\n      type=\"line\"\n      data = {props.energy?.data}\n      options = {options}\n      height = { 80 }\n      \n    /> \n</div>\n); ","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/useDetectOutsideClick.tsx",[],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/sharedComponents/carousel/carousel.tsx",[],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/useToken.tsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":6,"column":17,"nodeType":"76","messageId":"77","endLine":6,"endColumn":26},{"ruleId":"74","severity":1,"message":"78","line":6,"column":28,"nodeType":"76","messageId":"77","endLine":6,"endColumn":36},{"ruleId":"74","severity":1,"message":"79","line":13,"column":7,"nodeType":"76","messageId":"77","endLine":13,"endColumn":11},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"78","line":6,"column":10,"nodeType":"76","messageId":"77","endLine":6,"endColumn":18},{"ruleId":"74","severity":1,"message":"80","line":7,"column":10,"nodeType":"76","messageId":"77","endLine":7,"endColumn":31},{"ruleId":"74","severity":1,"message":"81","line":9,"column":8,"nodeType":"76","messageId":"77","endLine":9,"endColumn":19},{"ruleId":"74","severity":1,"message":"82","line":155,"column":7,"nodeType":"76","messageId":"77","endLine":155,"endColumn":49},{"ruleId":"74","severity":1,"message":"83","line":184,"column":7,"nodeType":"76","messageId":"77","endLine":184,"endColumn":35},{"ruleId":"74","severity":1,"message":"84","line":268,"column":10,"nodeType":"76","messageId":"77","endLine":268,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":23,"column":15,"nodeType":"87","endLine":23,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":26,"column":15,"nodeType":"87","endLine":26,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":29,"column":15,"nodeType":"87","endLine":34,"endColumn":16},{"ruleId":"74","severity":1,"message":"88","line":4,"column":10,"nodeType":"76","messageId":"77","endLine":4,"endColumn":22},{"ruleId":"74","severity":1,"message":"89","line":6,"column":10,"nodeType":"76","messageId":"77","endLine":6,"endColumn":25},{"ruleId":"74","severity":1,"message":"90","line":12,"column":6,"nodeType":"76","messageId":"77","endLine":12,"endColumn":15},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'bull' is assigned a value but never used.","'getTextOfJSDocComment' is defined but never used.","'CardActions' is defined but never used.","'energySavingsInformation' is assigned a value but never used.","'carouselItem' is assigned a value but never used.","'setData' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ChartOptions' is defined but never used.","'shouldShowChart' is defined but never used.","'lineChart' is defined but never used.","no-global-assign","no-unsafe-negation"]