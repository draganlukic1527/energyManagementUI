[{"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/index.js":"1","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/reportWebVitals.js":"2","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/App.tsx":"3","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/header/header.tsx":"4","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/Login/login.tsx":"5","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/Dashboard/dashboardcard/dashboardCard.tsx":"6","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/header/dropdown/dropdown.tsx":"7","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/Dashboard/chartcard/chartCard.tsx":"8","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/useDetectOutsideClick.tsx":"9","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/sharedComponents/carousel/carousel.tsx":"10","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/useToken.tsx":"11"},{"size":449,"mtime":1631582823966,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1631582823967,"results":"14","hashOfConfig":"13"},{"size":1232,"mtime":1667033597446,"results":"15","hashOfConfig":"13"},{"size":667,"mtime":1667031112600,"results":"16","hashOfConfig":"13"},{"size":2803,"mtime":1667034385232,"results":"17","hashOfConfig":"13"},{"size":6075,"mtime":1659426523495,"results":"18","hashOfConfig":"13"},{"size":1207,"mtime":1667034476398,"results":"19","hashOfConfig":"13"},{"size":790,"mtime":1657780785706,"results":"20","hashOfConfig":"13"},{"size":704,"mtime":1658705314478,"results":"21","hashOfConfig":"13"},{"size":2077,"mtime":1659429767841,"results":"22","hashOfConfig":"13"},{"size":590,"mtime":1667031345328,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1jw5fsj",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/index.js",[],["52","53"],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/reportWebVitals.js",[],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/App.tsx",["54","55"],"import './App.css';\nimport LoginPage from './components/Login/login';\nimport Header from './components/header/header';\nimport DashboardCard from './components/Dashboard/dashboardcard/dashboardCard';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport React, { Component, useState } from 'react';\nimport '@fontsource/mulish';\nimport useToken from './useToken';\n\nfunction App() {\n  const { token, setToken } = useToken();\n\n  console.log('token app:', token);\n  if (!token) {\n    return <LoginPage setToken={setToken} />;\n  }\n  if (token) {\n    return (\n      <div className=\"App\">\n        <Header setToken={setToken}></Header>\n        <DashboardCard></DashboardCard>\n      </div>\n    );\n  }\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route\n          path=\"/login\"\n          element={\n            <div className=\"App\">\n              <LoginPage setToken={setToken} />\n            </div>\n          }\n        />\n        <Route\n          path=\"/\"\n          element={\n            <div className=\"App\">\n              <Header setToken={setToken}></Header>\n              <DashboardCard></DashboardCard>\n            </div>\n          }\n        />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n",["56","57"],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/header/header.tsx",[],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/Login/login.tsx",["58"],"import './login.css';\nimport React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport TextField from '@mui/material/TextField';\nimport PropTypes from 'prop-types';\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n  ></Box>\n);\n\nasync function loginUser(credentials: any) {\n  console.log('Credentials:', credentials);\n  return await fetch('http://localhost:8080/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(credentials),\n  })\n    .then(data => data.json())\n    .catch(error => console.log('ERROR:', error));\n}\n\nexport default function LoginPage({ setToken }: any, customToken?: any) {\n  console.log('CUSTOM', customToken);\n  if (customToken.length > 0) {\n    console.log('CUSTOM', customToken);\n    setToken(customToken);\n  }\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    const token = await loginUser({\n      EmailAddress: username,\n      PasswordHash: password,\n    });\n    console.log('TOKEN: ', token);\n    setToken(token);\n  };\n\n  return (\n    <Card sx={{ minWidth: 400 }} className=\"login-card\">\n      <CardContent className=\"card-content\">\n        <h1>Energy Management Dashboard</h1>\n        <p className=\"card-title\">Enter your email and password below</p>\n        <form onSubmit={handleSubmit}>\n          <label className=\"label-content\">\n            <p className=\"text-field-title\">Email</p>\n            <TextField\n              id=\"outlined-email-input\"\n              type=\"text\"\n              autoComplete=\"current-email\"\n              className=\"text-field\"\n              onChange={(e: any) => setUserName(e.target.value)}\n            />\n          </label>\n          <label className=\"label-content\">\n            <p className=\"text-field-title\">Password</p>\n            <TextField\n              id=\"outlined-password-input\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              className=\"text-field\"\n              onChange={(e: any) => setPassword(e.target.value)}\n            />\n          </label>\n          <div>\n            <button className=\"card-submit\" type=\"submit\">\n              Log In\n            </button>\n          </div>\n        </form>\n      </CardContent>\n      <CardActions>\n        <p className=\"card-sign-up\">\n          Don't have an account? <span className=\"sign-up-text\">Sign Up!</span>\n        </p>\n      </CardActions>\n    </Card>\n  );\n}\n\nLoginPage.propTypes = {\n  setToken: PropTypes.func.isRequired,\n};\n","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/Dashboard/dashboardcard/dashboardCard.tsx",["59","60","61","62","63","64"],"import React from 'react';\nimport { ChartCard } from '../chartcard/chartCard';\nimport './dashboardCard.css';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/Button';\nimport { useState } from 'react';\nimport { getTextOfJSDocComment } from 'typescript';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Carousel, {\n  CarouselItem,\n} from '../../sharedComponents/carousel/carousel';\n\nexport interface IEnergyData {\n  price: string;\n  savings: string;\n  data: {\n    labels: string[];\n    datasets: [\n      {\n        label: string;\n        fill: boolean;\n        lineTension: number;\n        backgroundColor: string;\n        borderColor: string;\n        borderWidth: number;\n        data: number[];\n      }\n    ];\n  };\n}\n\nexport interface IEnergySavings {\n  id: number;\n  title: string;\n  description: string;\n}\n\nconst energyData: IEnergyData[] = [\n  {\n    price: '$306.20',\n    savings: '1.3%',\n    data: {\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n      ],\n      datasets: [\n        {\n          label: '',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56, 71, 62, 81, 78, 68, 72, 71],\n        },\n      ],\n    },\n  },\n  {\n    price: '$108.10',\n    savings: '1.3%',\n    data: {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n      datasets: [\n        {\n          label: '',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56, 71],\n        },\n      ],\n    },\n  },\n  {\n    price: '$306.20',\n    savings: '1.3%',\n    data: {\n      labels: [\n        'Jan 1',\n        'Jan 15',\n        'Jan 31',\n        'Feb 1',\n        'Feb 28',\n        'Mar 1',\n        'Mar 15',\n        'Mar 30',\n      ],\n      datasets: [\n        {\n          label: '',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [65, 72, 63, 59, 68, 62, 72, 80],\n        },\n      ],\n    },\n  },\n  {\n    price: '$306.20',\n    savings: '1.3%',\n    data: {\n      labels: ['Jan 1', 'Jan 6', 'Jan 12', 'Jan 18', 'Jan 24', 'Jan 31'],\n      datasets: [\n        {\n          label: '',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56, 71, 62],\n        },\n      ],\n    },\n  },\n  {\n    price: '$306.20',\n    savings: '1.3%',\n    data: {\n      labels: ['Mon', 'Tues', 'Wed', 'Th', 'Fri', 'Sat', 'Sun'],\n      datasets: [\n        {\n          label: '',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56, 71, 62],\n        },\n      ],\n    },\n  },\n];\n\nconst energySavingsInformation: IEnergySavings[] = [\n  {\n    id: 0,\n    title: 'reduce energy consumption',\n    description: 'turn off lights between 5-9pm',\n  },\n  {\n    id: 1,\n    title: 'Change laundry time',\n    description: 'Perform laundry past 9pm',\n  },\n  {\n    id: 2,\n    title: 'reduce water consumption',\n    description: 'Turn on sprinklers at night',\n  },\n];\n\ninterface MyProps {}\n\ninterface MyState {\n  index: number;\n}\n\nexport interface carouselData {\n  children: string;\n  width?: any;\n}\n\nconst carouselItem: carouselData[] = [\n  {\n    children: 'item1',\n    width: '100%',\n  },\n  {\n    children: 'item2',\n    width: '100%',\n  },\n  {\n    children: 'item3',\n    width: '100%',\n  },\n];\n\nexport default class DashboardCard extends React.Component<MyProps, MyState> {\n  constructor(props: IEnergyData) {\n    super(props);\n    this.state = {\n      index: 0,\n    };\n\n    this.parentToChild = this.parentToChild.bind(this);\n  }\n\n  parentToChild(index: number) {\n    this.setState({\n      index: index,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"Dashboard\">\n        <div className=\"dashboard-header\">\n          <div className=\"button-group\">\n            <ButtonGroup size=\"small\" aria-label=\"small button group\">\n              <Button onClick={() => this.parentToChild(4)}>1W</Button>\n              <Button onClick={() => this.parentToChild(3)}>1M</Button>\n              <Button onClick={() => this.parentToChild(2)}>3M</Button>\n              <Button onClick={() => this.parentToChild(1)}>6M</Button>\n              <Button onClick={() => this.parentToChild(0)}>1Y</Button>\n            </ButtonGroup>\n          </div>\n        </div>\n        <Card className=\"card-dashboard\">\n          <CardContent>\n            <div className=\"content\">\n              <div className=\"chart-card\">\n                <ChartCard\n                  energy={energyData[this.state.index]}\n                  shouldShowChart=\"true\"\n                />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <div className=\"card-list\">\n          <Card className=\"card-lidt-card\">\n            <CardContent>\n              <p>Energy Use: 24kwh</p>\n            </CardContent>\n          </Card>\n\n          <div>\n            <Carousel>\n              <CarouselItem>Item 1</CarouselItem>\n              <CarouselItem>Item 2</CarouselItem>\n              <CarouselItem>Item 3</CarouselItem>\n            </Carousel>\n          </div>\n\n          <Card className=\"card-lidt-card\">\n            <CardContent>\n              <p>Energy Use: 24kwh</p>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction setData(energyData: any) {\n  throw new Error('Function not implemented.');\n}\n","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/header/dropdown/dropdown.tsx",["65","66","67"],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/Dashboard/chartcard/chartCard.tsx",["68","69","70"],"import React from 'react';\nimport './chartCard.css';\nimport {Line} from 'react-chartjs-2';\nimport { ChartOptions } from 'chart.js/auto';\n\nfunction shouldShowChart (props: any) {\n  if (!props.shouldShowChart) {\n    return null;\n  }      \n}\n\ntype lineChart = {\n  energy: any,\n  options: any,\n}\n\nconst options: any = {\n  scales: {\n    x: {\n      grid: {\n        display: false\n      }    },\n    y: {\n      grid: {\n        display: false\n      }    }\n  },\n  plugins: {\n    legend: {\n        display: false\n    },\n  },\n  tooltips:{\n    enabled:false\n  },\n  hover: {mode: null},\n}\n\n\nexport const ChartCard = (props: any) => (\n  <div className='card-container'>\n    <Line\n      type=\"line\"\n      data = {props.energy?.data}\n      options = {options}\n      height = { 80 }\n      \n    /> \n</div>\n); ","/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/useDetectOutsideClick.tsx",[],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/components/sharedComponents/carousel/carousel.tsx",[],"/Users/draganlukic/Documents/Projects/energyManagementUIGitHub/energyManagementUI/energyUI/src/useToken.tsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":6,"column":17,"nodeType":"77","messageId":"78","endLine":6,"endColumn":26},{"ruleId":"75","severity":1,"message":"79","line":6,"column":28,"nodeType":"77","messageId":"78","endLine":6,"endColumn":36},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"80","line":10,"column":7,"nodeType":"77","messageId":"78","endLine":10,"endColumn":11},{"ruleId":"75","severity":1,"message":"79","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":18},{"ruleId":"75","severity":1,"message":"81","line":7,"column":10,"nodeType":"77","messageId":"78","endLine":7,"endColumn":31},{"ruleId":"75","severity":1,"message":"82","line":9,"column":8,"nodeType":"77","messageId":"78","endLine":9,"endColumn":19},{"ruleId":"75","severity":1,"message":"83","line":155,"column":7,"nodeType":"77","messageId":"78","endLine":155,"endColumn":49},{"ruleId":"75","severity":1,"message":"84","line":184,"column":7,"nodeType":"77","messageId":"78","endLine":184,"endColumn":35},{"ruleId":"75","severity":1,"message":"85","line":268,"column":10,"nodeType":"77","messageId":"78","endLine":268,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":23,"column":15,"nodeType":"88","endLine":23,"endColumn":27},{"ruleId":"86","severity":1,"message":"87","line":26,"column":15,"nodeType":"88","endLine":26,"endColumn":27},{"ruleId":"86","severity":1,"message":"87","line":29,"column":15,"nodeType":"88","endLine":34,"endColumn":16},{"ruleId":"75","severity":1,"message":"89","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":22},{"ruleId":"75","severity":1,"message":"90","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":25},{"ruleId":"75","severity":1,"message":"91","line":12,"column":6,"nodeType":"77","messageId":"78","endLine":12,"endColumn":15},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'bull' is assigned a value but never used.","'getTextOfJSDocComment' is defined but never used.","'CardActions' is defined but never used.","'energySavingsInformation' is assigned a value but never used.","'carouselItem' is assigned a value but never used.","'setData' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ChartOptions' is defined but never used.","'shouldShowChart' is defined but never used.","'lineChart' is defined but never used.","no-global-assign","no-unsafe-negation"]